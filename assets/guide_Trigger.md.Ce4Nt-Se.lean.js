import{_ as e,c as l,a4 as d,o as a}from"./chunks/framework.BBFIYKeO.js";const x=JSON.parse('{"title":"Trigger场景触写入模块","titleTemplate":"Tritium_docs","description":"","frontmatter":{"title":"Trigger场景触写入模块","layout":"doc","titleTemplate":"Tritium_docs"},"headers":[],"relativePath":"guide/Trigger.md","filePath":"guide/Trigger.md","lastUpdated":1732529017000}'),r={name:"guide/Trigger.md"};function i(n,t,o,s,g,c){return a(),l("div",null,t[0]||(t[0]=[d('<h3 id="trigger场景触发写入模块" tabindex="-1">Trigger场景触发写入模块 <a class="header-anchor" href="#trigger场景触发写入模块" aria-label="Permalink to &quot;Trigger场景触发写入模块&quot;">​</a></h3><blockquote><p>支持在特定场景触发时调整Property值和写入文件以改变调度策略， 例如提高CPU调频器的冗余.</p></blockquote><h4 id="scenes-场景触发器" tabindex="-1">scenes - 场景触发器 <a class="header-anchor" href="#scenes-场景触发器" aria-label="Permalink to &quot;scenes - 场景触发器&quot;">​</a></h4><p>当触发指定场景时将会自动向文件中写入预设的文本, 写入方式与<code>echo [text] &gt; [path]</code>相同且效率更高, 写入单个文件的耗时通常不超过1ms.<br> 支持的场景如下:<br><code>init</code>: 调度初始化时触发, 仅执行一次.<br><code>screenOn</code>: 屏幕点亮时触发.<br><code>screenOff</code>: 屏幕熄灭时触发.<br><code>powersaveMode</code>: 切换到powersave模式时触发.<br><code>balanceMode</code>: 切换到balance模式时触发.<br><code>performanceMode</code>: 切换到performance模式时触发.<br><code>fastMode</code>: 切换到fast模式时触发.<br> 此项配置类型为<code>ArrayJson</code>, 即数组中的每个Json元素对应一个文件写入任务.</p><table tabindex="0"><thead><tr><th style="text-align:left;">字段</th><th style="text-align:left;">类型</th><th style="text-align:left;">定义</th></tr></thead><tbody><tr><td style="text-align:left;">path</td><td style="text-align:left;">string</td><td style="text-align:left;">写入的目标地址</td></tr><tr><td style="text-align:left;">text</td><td style="text-align:left;">string</td><td style="text-align:left;">需要写入的文本</td></tr></tbody></table><h4 id="hints-场景触发器" tabindex="-1">hints - 场景触发器 <a class="header-anchor" href="#hints-场景触发器" aria-label="Permalink to &quot;hints - 场景触发器&quot;">​</a></h4><p>触发条件包含<code>tap</code> <code>swipe</code> <code>gesture</code> <code>heavyload</code> <code>jank</code> <code>bigJank</code>,分别在 点击屏幕 滑动屏幕 手势操作 重负载 掉帧 严重掉帧 时触发.<br> 触发的优先级为<code>none</code> &lt; <code>tap</code> &lt; <code>swipe</code> &lt; <code>gesture</code> &lt; <code>heavyload</code> &lt; <code>jank</code> &lt; <code>bigJank</code>, 当更高优先级的加速触发时将覆盖低优先级的加速.</p><table tabindex="0"><thead><tr><th style="text-align:left;">字段</th><th style="text-align:left;">类型</th><th style="text-align:left;">定义</th></tr></thead><tbody><tr><td style="text-align:left;">durationTime</td><td style="text-align:left;">int</td><td style="text-align:left;">触发持续时间(单位:ms)</td></tr><tr><td style="text-align:left;">cpu.boost</td><td style="text-align:left;">int</td><td style="text-align:left;">频率加速值(范围:0-100)</td></tr><tr><td style="text-align:left;">cpu.extra_margin</td><td style="text-align:left;">int</td><td style="text-align:left;">额外性能冗余(范围:0-100)</td></tr><tr><td style="text-align:left;">cpu.low_latency</td><td style="text-align:left;">bool</td><td style="text-align:left;">是否降低延迟</td></tr><tr><td style="text-align:left;">mtk_gpu.min_freq</td><td style="text-align:left;">int</td><td style="text-align:left;">需要写入的文本</td></tr><tr><td style="text-align:left;">mtk_gpu.boost</td><td style="text-align:left;">int</td><td style="text-align:left;">频率加速值(范围:0-100)</td></tr><tr><td style="text-align:left;">mtk_gpu.extra_margin</td><td style="text-align:left;">int</td><td style="text-align:left;">额外性能冗余(范围:0-100)</td></tr><tr><td style="text-align:left;">mtk_gpu.low_latency</td><td style="text-align:left;">bool</td><td style="text-align:left;">是否降低延迟</td></tr><tr><td style="text-align:left;">devfreq.ddr.min_freq</td><td style="text-align:left;">int</td><td style="text-align:left;">ddr空闲频率下限</td></tr><tr><td style="text-align:left;">devfreq.gpu.min_freq</td><td style="text-align:left;">int</td><td style="text-align:left;">gpu空闲频率下限</td></tr></tbody></table><p>当要求调频器降低延迟时调频器将会以最快的速度提升CPU频率, 适用于检测到掉帧等需要迅速提升CPU频率的场景.<br><code>extraMargin</code>值用于提供额外的性能冗余, 计算公式如下: <code>acturalMargin = perfMargin + extraMargin</code>.<br><code>boost</code>值用于夸大实际的CPU负载, 计算公式如下: <code>cpuLoad = cpuLoad + (100 - cpuLoad) * boost / 100</code>.</p><h3 id="thermal温度过载保护模块" tabindex="-1">Thermal温度过载保护模块 <a class="header-anchor" href="#thermal温度过载保护模块" aria-label="Permalink to &quot;Thermal温度过载保护模块&quot;">​</a></h3><blockquote><p>支持在芯片过热时调整Property值以改变调度策略, 例如降低CPU的最大功耗和限制GPU的最高频率.</p></blockquote><h4 id="params-调频器参数" tabindex="-1">params - 调频器参数 <a class="header-anchor" href="#params-调频器参数" aria-label="Permalink to &quot;params - 调频器参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">字段</th><th style="text-align:left;">类型</th><th style="text-align:left;">定义</th></tr></thead><tbody><tr><td style="text-align:left;">interval</td><td style="text-align:left;">int</td><td style="text-align:left;">空闲工作频率</td></tr><tr><td style="text-align:left;">actionDelay</td><td style="text-align:left;">int</td><td style="text-align:left;">活动工作频率</td></tr><tr><td style="text-align:left;">matchRule</td><td style="text-align:left;">null</td><td style="text-align:left;">null</td></tr></tbody></table><h4 id="modes-调频器参数" tabindex="-1">modes - 调频器参数 <a class="header-anchor" href="#modes-调频器参数" aria-label="Permalink to &quot;modes - 调频器参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">字段</th><th style="text-align:left;">类型</th><th style="text-align:left;">定义</th></tr></thead><tbody><tr><td style="text-align:left;">temp</td><td style="text-align:left;">ArrayInt</td><td style="text-align:left;">过热温度(范围:0-100°C)</td></tr><tr><td style="text-align:left;">cpu.max_power</td><td style="text-align:left;">int</td><td style="text-align:left;">CPU功耗上限</td></tr><tr><td style="text-align:left;">mtk_gpu.max_freq</td><td style="text-align:left;">int</td><td style="text-align:left;">GPU频率上限</td></tr><tr><td style="text-align:left;">devfreq.ddr.max_freq</td><td style="text-align:left;">int</td><td style="text-align:left;">ddr频率余量上限</td></tr><tr><td style="text-align:left;">devfreq.gpu.max_freq</td><td style="text-align:left;">int</td><td style="text-align:left;">GPU频率余量上限</td></tr></tbody></table><p>过热温度为触发调频器温度控制的阈值,当temp设置为-1时则代表忽略过热温度，例如temp设置为80时则表示当CPU温度超过80°C时将触发该字段所包含的变量</p>',16)]))}const y=e(r,[["render",i]]);export{x as __pageData,y as default};
